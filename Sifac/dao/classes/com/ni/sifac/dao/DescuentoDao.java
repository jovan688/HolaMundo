package com.ni.sifac.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.ni.sifac.dao.Descuento;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DESCUENTO".
*/
public class DescuentoDao extends AbstractDao<Descuento, Void> {

    public static final String TABLENAME = "DESCUENTO";

    /**
     * Properties of entity Descuento.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property DescuentoMaximo = new Property(0, Float.class, "DescuentoMaximo", false, "DESCUENTO_MAXIMO");
        public final static Property DescuentoMinimo = new Property(1, Float.class, "DescuentoMinimo", false, "DESCUENTO_MINIMO");
        public final static Property PlazoPago = new Property(2, Float.class, "PlazoPago", false, "PLAZO_PAGO");
        public final static Property SccDescuentoID = new Property(3, Float.class, "SccDescuentoID", false, "SCC_DESCUENTO_ID");
    };


    public DescuentoDao(DaoConfig config) {
        super(config);
    }
    
    public DescuentoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DESCUENTO\" (" + //
                "\"DESCUENTO_MAXIMO\" REAL," + // 0: DescuentoMaximo
                "\"DESCUENTO_MINIMO\" REAL," + // 1: DescuentoMinimo
                "\"PLAZO_PAGO\" REAL," + // 2: PlazoPago
                "\"SCC_DESCUENTO_ID\" REAL);"); // 3: SccDescuentoID
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DESCUENTO\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Descuento entity) {
        stmt.clearBindings();
 
        Float DescuentoMaximo = entity.getDescuentoMaximo();
        if (DescuentoMaximo != null) {
            stmt.bindDouble(1, DescuentoMaximo);
        }
 
        Float DescuentoMinimo = entity.getDescuentoMinimo();
        if (DescuentoMinimo != null) {
            stmt.bindDouble(2, DescuentoMinimo);
        }
 
        Float PlazoPago = entity.getPlazoPago();
        if (PlazoPago != null) {
            stmt.bindDouble(3, PlazoPago);
        }
 
        Float SccDescuentoID = entity.getSccDescuentoID();
        if (SccDescuentoID != null) {
            stmt.bindDouble(4, SccDescuentoID);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public Descuento readEntity(Cursor cursor, int offset) {
        Descuento entity = new Descuento( //
            cursor.isNull(offset + 0) ? null : cursor.getFloat(offset + 0), // DescuentoMaximo
            cursor.isNull(offset + 1) ? null : cursor.getFloat(offset + 1), // DescuentoMinimo
            cursor.isNull(offset + 2) ? null : cursor.getFloat(offset + 2), // PlazoPago
            cursor.isNull(offset + 3) ? null : cursor.getFloat(offset + 3) // SccDescuentoID
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Descuento entity, int offset) {
        entity.setDescuentoMaximo(cursor.isNull(offset + 0) ? null : cursor.getFloat(offset + 0));
        entity.setDescuentoMinimo(cursor.isNull(offset + 1) ? null : cursor.getFloat(offset + 1));
        entity.setPlazoPago(cursor.isNull(offset + 2) ? null : cursor.getFloat(offset + 2));
        entity.setSccDescuentoID(cursor.isNull(offset + 3) ? null : cursor.getFloat(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(Descuento entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(Descuento entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
